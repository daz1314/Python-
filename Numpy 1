三、Numpy数据存储与函数
3.1数据的CSV文件存取
csv是一种常见的文件格式，用于存储批量数据。

np.savetxt(frame, array, fmt = '%.18e', delimiter = None)

frame: 文件、字符串或产生器，可以是.gz或者.bz2的压缩文件

array:存入文件得数组

fmt:写入文件的格式，例如：%d %.2f %.18e

delimiter:分割字符串，默认空格，在csv文件中定义为逗号

In [3]:
import numpy as np
In [5]:
a = np.arange(100).reshape(5, 20)
In [7]:
print(a)
[[ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19]
 [20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39]
 [40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59]
 [60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79]
 [80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99]]
In [8]:
np.savetxt('a.csv', a, fmt = '%d', delimiter = ',')
In [11]:
np.savetxt('a.csv', a, fmt  = '%.2f', delimiter = ',')
将CSV文件中的数据读入到一个数组类型中

np.loadtxt(frame, dtype = np.float, delimiter = None, unpack = False)

frame:文件、字符串或产生器，读入的文件可以是.gz或者.bz2的压缩文件。压缩是为了处理大数据节省空间

dtype:数据类型，可选。默认浮点数类型

delimiter:分割字符串，默认是任何空格 。CSV文件需要时逗号

unpack:默认False,将读入的数据写入一个数组。如果是True，读入属性将分别写入不同的数组变量

In [12]:
b = np.loadtxt('a.csv', delimiter = ',')
In [13]:
b
Out[13]:
array([[  0.,   1.,   2.,   3.,   4.,   5.,   6.,   7.,   8.,   9.,  10.,
         11.,  12.,  13.,  14.,  15.,  16.,  17.,  18.,  19.],
       [ 20.,  21.,  22.,  23.,  24.,  25.,  26.,  27.,  28.,  29.,  30.,
         31.,  32.,  33.,  34.,  35.,  36.,  37.,  38.,  39.],
       [ 40.,  41.,  42.,  43.,  44.,  45.,  46.,  47.,  48.,  49.,  50.,
         51.,  52.,  53.,  54.,  55.,  56.,  57.,  58.,  59.],
       [ 60.,  61.,  62.,  63.,  64.,  65.,  66.,  67.,  68.,  69.,  70.,
         71.,  72.,  73.,  74.,  75.,  76.,  77.,  78.,  79.],
       [ 80.,  81.,  82.,  83.,  84.,  85.,  86.,  87.,  88.,  89.,  90.,
         91.,  92.,  93.,  94.,  95.,  96.,  97.,  98.,  99.]])
此时，每个元素都是浮点型

In [15]:
b = np.loadtxt('a.csv', dtype = np.int, delimiter = ',')
Out[15]:
array([[ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
        17, 18, 19],
       [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36,
        37, 38, 39],
       [40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56,
        57, 58, 59],
       [60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76,
        77, 78, 79],
       [80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96,
        97, 98, 99]])
In [16]:
b
Out[16]:
array([[ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
        17, 18, 19],
       [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36,
        37, 38, 39],
       [40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56,
        57, 58, 59],
       [60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76,
        77, 78, 79],
       [80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96,
        97, 98, 99]])
指定类型后，输出的元素都是整形

CSV文件的局限性

CSV 只能有效存储一维和二维数组 np.savetxt()和np.loadtxt()只能有效存取一维和二维数组
